{"name":"Asqlmap-bb","tagline":"Automated sqlmap for BackBox","body":"asqlmap - Automated sqlmap for BackBox\r\n=======\r\n\r\nAsqlmap is a terminal interface to automatize the famous SQL Injection's tool sqlmap.\r\nIt provides a very simple interface to quickly perform sqlmap's tests on a specific target.\r\n\r\nThis version of asqlmap was tested on BackBox Linux.\r\n\r\nAsqlmap is very simple to use: you only need to specify the target. Then from the interface you can choose which test you want to perform.\r\n\r\nWith asqlmap you can:\r\n\r\n1) Vulnerability check and information research (Databases,tables)\r\n\r\n2) Users, passwords and privileges research\r\n\r\n3) Open SQL Shell\r\n\r\n4) Open OS Shell\r\n\r\n5) Dump single table\r\n\r\n6) Dump single database\r\n\r\n7) Dump all databases\r\n\r\n\r\nAsqlmap is pre-configured to keeps your anonymity safe using Tor for every operation and using a random User Agent for each test.\r\n\r\n## Screenshot\r\n\r\n![asqlmap for BackBox](http://imageshack.com/a/img856/1854/sacm.png)\r\n\r\nWhat is sqlmap?\r\n-------\r\n\r\nsqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. It comes with a powerful detection engine, many niche features for the ultimate penetration tester and a broad range of switches lasting from database fingerprinting, over data fetching from the database, to accessing the underlying file system and executing commands on the operating system via out-of-band connections.\r\n\r\nFor further information about sqlmap visit their github webpage: https://github.com/sqlmapproject/sqlmap\r\n\r\nRequirements:\r\n-------\r\n\r\n- sqlmap (On BackBox is just installed)\r\n- Tor (installed and running)\r\n- Polipo (installed and running)\r\n\r\n\r\nHow to use asqlmap\r\n-------\r\n\r\nBefore you can run asqlmap you need to set execution permission\r\n\r\nchmod +x asqlmap.sh\r\n\r\nTest an URL\r\n-------\r\n\r\nUSAGE:\r\n\t./asqlmap.sh URL [OPTIONS]\r\n\t\r\nOptions:\r\n\r\n\t-r <risk value>\t\tRisk of test to perform (0-3, default 1)\r\n\t\r\n\t-l <level value>\tLevel of test to perform (1-5, default 1)\r\n\t\r\n\t-h,-help\t\tShow this help\r\n\t\r\n\r\nEg. ./asqlmap.sh \"http://www.example.com\" -r 2 -l 3\r\n\r\nNOTE: Don't forget to add \" at the beginning and at the end of the URL to support more than one GET variables.\r\n\r\nSee sqlmap documentation to understand risk (https://github.com/sqlmapproject/sqlmap/wiki/Usage#risk) and level (https://github.com/sqlmapproject/sqlmap/wiki/Usage#level) options\r\n\r\nSearch URL with Google Dork\r\n-------\r\n\r\n./asqlmap.sh -g GOOGLEDORK\r\n\r\nEg. ./asqlmap.sh -g inurl:index.php?id=\r\n\r\nKnow issues\r\n-------\r\n\r\nNone at the moment","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}